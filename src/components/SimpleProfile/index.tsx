// SimpleProfile is working like a kaleidoscope -- it divides plane into n sections and
// allows definition of reference points that are repeated across all sections.

// Looking at a single section, PointSet allows to define:
// - offset from the edge of the profile
// - number of points
// - angle start and angle step, expressed as 0-1 in terms of section arc

// Points generated by point sets are sorted by angle and will be used for profile curve generation.

import { SizeUnit } from "@/lib/units";
import { PointSet, Color, Profile } from "@/lib/types";

import { calculateDrawProps, generateProfile } from "./util";
import { GuideLines } from "./GuideLines";
import { GuideArc } from "./GuideArc";
import { ProfilePoints } from "./ProfilePoints";
import { ProfileCurve } from "./ProfileCurve";

export type SimpleProfileProps = {
  profile: Profile;
  profileDiameter: number;
  sizeUnit: SizeUnit;
  colors: Color[];
  width: number;
  height: number;
};

export const SimpleProfile = ({
  profile,
  profileDiameter,
  sizeUnit,
  width,
  height,
  colors,
}: SimpleProfileProps) => {
  const maxOffset = profile.pointSets.reduce(
    (max, { offset }) => Math.max(max, offset),
    0
  );

  const profileRadius = profileDiameter / 2;

  const generatedProfile = generateProfile(profileRadius, sizeUnit, profile);

  const drawProps = calculateDrawProps(
    profileRadius,
    maxOffset,
    generatedProfile
  );

  return (
    <svg viewBox={drawProps.viewBox} width={width} height={height}>
      <GuideLines {...drawProps} />
      <GuideArc {...drawProps} />
      <ProfilePoints
        profilePoints={generatedProfile.controlPoints}
        colors={colors}
        {...drawProps}
      />
      <ProfileCurve
        profileCurve={generatedProfile.curvePoints}
        {...drawProps}
      />
    </svg>
  );
};
